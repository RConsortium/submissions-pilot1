# Generated by pkglite: do not edit by hand
# Use pkglite::unpack() to restore the packages

Package: pilot1wrappers
File: .Rbuildignore
Format: text
Content:
  ^renv$
  ^renv\.lock$
  ^.*\.Rproj$
  ^\.Rproj\.user$
  ^pilot1wrappers\.Rcheck$
  ^pilot1wrappers.*\.tar\.gz$
  ^pilot1wrappers.*\.tgz$
  ^_pkgdown\.yml$
  ^docs$
  ^pkgdown$
  ^LICENSE.md$
  ^output$
  ^readme.md$
  ^adam$
  ^vignettes$
  ^\.github$

Package: pilot1wrappers
File: DESCRIPTION
Format: text
Content:
  Package: pilot1wrappers
  Type: Package
  Title: R Consortium R Submission Pilot 1
  Version: 0.1.1
  Authors@R: c(
          person("Yilong", "Zhang", email = "elong0527@gmail.com", role = c("aut", "cre")),
          person("Ning", "Leng", role = c("aut")),
          person("Mike", "Stackhouse", role = c("aut")),
          person("Peikun", "Wu", role = c("aut")),
          person("Heng", "Wang", role = c("aut")),
          person("Eli", "Miller", role = c("aut")),
          person("Steven", "Haesendonckx", role = c("ctb"))
         )
  Description: R Consortium R Submission Pilot 1. 
  Depends: R (>= 3.6.0)
  License: GPL (>= 3)
  Imports: 
      r2rtf,
      fs,
      rtables,
      dplyr,
      tidyr,
      emmeans,
      haven,
      glue,
      stringr,
      Tplyr,
      pharmaRTF,
      ggplot2,
      cowplot,
      visR
  Suggests: 
      devtools,
      testthat,
      knitr,
      rmarkdown,
      rprojroot,
      sessioninfo,
      pkglite
  Encoding: UTF-8
  LazyData: true
  Roxygen: list(markdown = TRUE)  
  RoxygenNote: 7.1.1

Package: pilot1wrappers
File: NAMESPACE
Format: text
Content:
  # Generated by roxygen2: do not edit by hand
  
  export(efficacy_models)
  export(fmt_ci)
  export(fmt_est)
  export(fmt_num)
  export(fmt_pval)
  export(nest_rowlabels)
  export(num_fmt)
  export(pad_row)
  importFrom(dplyr,across)
  importFrom(dplyr,arrange)
  importFrom(dplyr,bind_rows)
  importFrom(dplyr,distinct)
  importFrom(dplyr,mutate)
  importFrom(dplyr,rename)
  importFrom(dplyr,select)
  importFrom(dplyr,starts_with)
  importFrom(glue,glue)
  importFrom(stringr,str_pad)
  importFrom(tidyr,pivot_longer)
  importFrom(tidyr,replace_na)

Package: pilot1wrappers
File: NEWS.md
Format: text
Content:
  # pilot1wrappers 0.1.1
  
  * Address reviewer comments for `tlf-efficacy.Rmd` and `tlf-primary`.
  * Change running R version to R4.1.2
  
  
  # pilot1wrappers 0.1.0
  
  * Added a `NEWS.md` file to track changes to the package.
  * Initial submission

Package: pilot1wrappers
File: README.md
Format: text
Content:
  <!-- badges: start -->
  
  [![R-CMD-check](https://github.com/RConsortium/submissions-pilot1/workflows/R-CMD-check/badge.svg)](https://rconsortium.github.io/submissions-pilot1/)
  <!-- badges: end -->
  
  ## Overview
  
  The objective of the R Consortium R submission Pilot 1 Project is to 
  test the concept that a R-language based submission package can meet 
  the needs and the expectations of the FDA reviewers, 
  including assessing code review and analyses reproducibility. 
  All submission materials and communications from this pilot are publicly available, 
  with the aim of providing a working example for future R language based FDA submissions.
  This is a FDA-industry collaboration through the non-profit organization R consortium.
  
  The [working group website](https://rconsortium.github.io/submissions-wg/).
  
  The [RConsortium/submissions-pilot1](https://github.com/RConsortium/submissions-pilot1) repo demonstrates an approach to organize internal developed R function and 
  table, listing, figure generation program using an R package. 
  
  The [RConsortium/submissions-pilot1-to-fda](https://github.com/RConsortium/submissions-pilot1-to-fda)
  repo demonstrates the eCTD submission package based on the [RConsortium/submissions-pilot1](https://github.com/RConsortium/submissions-pilot1) repo.  
  
  ## FDA Response 
  
  - Initial submission
    + version: [v0.1.0](https://github.com/RConsortium/submissions-pilot1/releases/tag/v0.1.0) 
    + [FDA statistical review and evaluation](https://github.com/RConsortium/submissions-pilot1/blob/main/vignettes/fda/fda-response-2021-11-22.pdf)
    
  ## Running Environment 
  
  The project is developed and tested in the environment below:
  
  - OS: Ubuntu 20.04
  - R version: R4.1.2
  - Snapshot date: 2021-08-31
  - Snapshot repository: https://mran.microsoft.com/snapshot/2021-08-31
  
  ## Folder Structure 
  
  The work in this repo is organized as an R package following the concepts discussed in:
  
  - [Marwick, B., Boettiger, C., & Mullen, L. (2018). Packaging data analytical work reproducibly using R (and friends). The American Statistician, 72(1), 80-88.](https://peerj.com/preprints/3192/)
  - [Wu, P., Palukuru, U. P., Luo, Y., Nepal, S., & Zhang, Y. (2021) Analysis and reporting in regulated clinical trial environment using R. PharmaSUG 2021](https://www.pharmasug.org/proceedings/2021/AD/PharmaSUG-2021-AD-079.pdf)
  
  More details related to organize a clinical project and submission package can be found in Chapter 9-14
  of the  [R for Clinical Study Reports and Submission](https://r4csr.org/index.html) book.
  
  ### R function and Analysis Scripts 
  
  In short, the project is organized as an R package. 
  
  - `pilot1wrappers.Rproj`: RStudio project file used to open RStudio project.
  - `DESCRIPTION`: Metadata for a package including authors, license, dependency etc.
  - `vignettes/`: Analysis scripts using Rmarkdown.
  - `R/`: Project specific R functions.
  - `man/`: Manual of project specific R functions. 
  
  ### Datasets
  
  The source dataset is in `adam\` folder. The original data is from [the PHUSE Github Repository](https://github.com/phuse-org/phuse-scripts/blob/master/data/adam/TDF_ADaM_v1.0.zip)
  
  ### Startup file 
  - `.Rprofile`: Project startup file to setup running environment including R version, repository, folder path etc. 
    - We further use `inst/startup.R` and `R/zzz.R` to allow the startup file is executed while running. `devtools::load_all()` and RStudio build panel. 
    
  ### Results 
  
  - `output\`: TLFs output generated by Rmarkdown files in `vignettes\` folder. 
  
  ### Reproducibility
  
  The original code is prepared and executed on Ubuntu 20.04.3 LTS.
  We use `renv` to ensure reproducibility for R version and R package version. 
  
  - `renv.lock` and `renv\` folder: R package management using `renv` package. ([Introduction](https://rstudio.github.io/renv/articles/renv.html))
  
  ### Utilities
  
  - `_pkgdown.yml`: [pkgdown](https://pkgdown.r-lib.org/articles/pkgdown.html) configuration file.
  

Package: pilot1wrappers
File: R/eff_models.R
Format: text
Content:
  #' ANCOVA Model data processing necessary for Table 14-3.01
  #'
  #' This function handles the necessary data processing to handle the CDISC pilot
  #' primary endpoint analysis. The original source can be found
  #' [here](https://github.com/atorus-research/CDISC_pilot_replication/blob/3c8e9e3798c02be8d93bd8e8944d1e0d3f6519e2/programs/funcs.R#L401)
  #'
  #' @importFrom tidyr pivot_longer
  #' @importFrom glue glue
  #'
  #' @param data Source dataset (filtered by flags)
  #' @param var Variable on which model should be run
  #' @param wk Visit to be modeled
  #'
  #' @return Formatted dataframe
  #' @export
  #'
  efficacy_models <- function(data, var=NULL, wk=NULL) {
  
    # Need to set contrasts to work for Type III SS. See analysis results metadata for
    # table 14-3.01. Reference for R here: https://www.r-bloggers.com/anova-%E2%80%93-type-iiiiii-ss-explained/
    op <- options(contrasts = c("contr.sum","contr.poly"))
    
    # Subset to analyze
    data <- data %>%
      filter(AVISITN == wk)
    
    data <- data %>%
      mutate(
        TRTPCD = case_when(
          TRTPN == 0 ~ 'Pbo',
          TRTPN == 54 ~ 'Xan_Lo',
          TRTPN == 81 ~ 'Xan_Hi'
        )
      )
    
    # Create an ordered factor variable for the models
    data['TRTPCD_F'] <- factor(data$TRTPCD, levels=c('Xan_Hi', 'Xan_Lo', 'Pbo'))
    data['AWEEKC'] = factor(data$AVISIT)
    
    # Set up the models
    if (var == "CHG") {
      model1 <- lm(CHG ~ TRTPN + SITEGR1 + BASE, data=data)
      model2 <- lm(CHG ~ TRTPCD_F + SITEGR1 + BASE, data=data)
    } else {
      model1 <- lm(AVAL ~ TRTPN + SITEGR1, data=data)
      model2 <- lm(AVAL ~ TRTPCD_F + SITEGR1, data=data)
    }
    
    ## Dose Response --- NOTE: For statistics portions, I purposefully did not
    #import the libraries to make it explicitly clear which packages were being
    #used to match P-values.
    ancova <- drop1(model1, .~., test="F")
    
    # Pull it out into a table
    sect1 <- tibble(row_label=c('p-value(Dose Response) [1][2]'),
                    `81` = c(num_fmt(ancova[2, 'Pr(>F)'], int_len=4, digits=3, size=12))
    ) %>%
      pad_row()
    
    ## Pairwise Comparisons ----
    # Here's a reference for the emmeans package and how to use it:
    #   https://cran.r-project.org/web/packages/emmeans/vignettes/confidence-intervals.html
    # Adjustments made are in line with the analysis results metadata in the analysis define
    # and PROC GLM documentation.
    
    # Linear model but use treatment group as a factor now
    # LS Means and weight proportionately to match OM option on PROC GLM in SAS
    lsm <- emmeans::lsmeans(model2, ~TRTPCD_F, weights='proportional')
    
    # Here on out - it's all the same data manipulation
    # Get pairwise contrast and remove P-values adjustment for multiple groups
    cntrst_p <- emmeans::contrast(lsm, method="pairwise", adjust=NULL)
    # 95% CI
    cntrst_ci <- confint(cntrst_p)
    
    # merge and convert into dataframe
    pw_data <- as_tibble(summary(cntrst_p)) %>%
      merge(as_tibble(cntrst_ci)) %>%
      rowwise() %>%
      # Create the display strings
      mutate(
        p = num_fmt(p.value, int_len=4, digits=3, size=12),
        diff_se = as.character(
          glue('{num_fmt(estimate, int_len=2, digits=1, size=4)} ({num_fmt(SE, int_len=1, digits=2, size=4)})')
        ),
        ci = as.character(
          glue('({num_fmt(lower.CL, int_len=2, digits=1, size=4)};{num_fmt(upper.CL, int_len=1, digits=1, size=3)})')
        )
      ) %>%
      # Clean out the numeric variables
      select(contrast, p, diff_se, ci) %>%
      # Transpose
      pivot_longer(c('p', 'diff_se', 'ci'), names_to = 'row_label')
    
    # Subset Xan_Lo - Pbo into table variables
    xan_lo <- pw_data %>%
      filter(contrast == 'Xan_Lo - Pbo') %>%
      # Rename to the table display variable
      select(`54`=value) %>%
      pad_row()
    
    #Add in row_label
    xan_lo['row_label'] <- c('p-value(Xan - Placebo) [1][3]', '  Diff of LS Means (SE)', '  95% CI', '')
    
    # Subset Xan_hi - Pbo into table variables
    xan_hi <- pw_data %>%
      filter(contrast == 'Xan_Hi - Pbo') %>%
      # Rename to the table display variable
      select(`81`=value) %>%
      pad_row()
    # Add in row_label
    xan_hi['row_label'] <- c('p-value(Xan - Placebo) [1][3]', '  Diff of LS Means (SE)', '  95% CI', '')
    xan_hi['ord'] <- c(1,2,3,4) # Order for sorting
    
    # Subset Xan_Hi - Xan_Lo into table variable
    xan_xan <- pw_data %>%
      filter(contrast == 'Xan_Hi - Xan_Lo') %>%
      # Rename to the table display variable
      select(`81`=value)
    # Add in row_label
    xan_xan['row_label'] <- c('p-value(Xan High - Xan Low) [1][3]', '  Diff of LS Means (SE)', '  95% CI')
    xan_xan['ord'] <- c(5,6,7) # Order for sorting
    
    # Pack it all together
    pw_final <- merge(xan_lo, xan_hi, by='row_label') %>%
      bind_rows(xan_xan) %>%
      arrange(ord)
    
    # Bind and clean up
    bind_rows(sect1, pw_final) %>% 
      select(row_label, 
             `var1_Xanomeline Low Dose` = `54`,
             `var1_Xanomeline High Dose` = `81`
      )
  }

Package: pilot1wrappers
File: R/fmt.R
Format: text
Content:
  #' Format numeric value
  #'
  #' @inheritParams base::formatC
  #'
  #' @examples
  #' fmt_num(1.25, digits = 1)
  #' @export
  fmt_num <- function(x, digits, width = digits + 4) {
    formatC(x,
      digits = digits,
      format = "f",
      width = width
    )
  }
  
  #' Format point estimator
  #'
  #' @param .mean mean of an estimator.
  #' @param .sd sd of an estimator.
  #' @param digits number of digits for `.mean` and `.sd`.
  #'
  #' @examples
  #' fmt_est(1.25, 0.5)
  #' @export
  fmt_est <- function(.mean,
                      .sd,
                      digits = c(1, 2)) {
    .mean <- fmt_num(.mean, digits[1], width = digits[1] + 4)
    .sd <- fmt_num(.sd, digits[2], width = digits[2] + 3)
    paste0(.mean, " (", .sd, ")")
  }
  
  #' Format confidence interval
  #'
  #' @param .est an estimator.
  #' @param .lower lower confidence interval bound of an estimator.
  #' @param .upper upper confidence interval bound of an estimator.
  #' @param digits number of digits for `.est`, `.lower`, and `.upper`.
  #' @param width the total field width.
  #'
  #' @examples
  #' fmt_ci(1, -0.25, 1.32)
  #' @export
  fmt_ci <- function(.est,
                     .lower,
                     .upper,
                     digits = 2,
                     width = digits + 3) {
    .est <- fmt_num(.est, digits, width)
    .lower <- fmt_num(.lower, digits, width)
    .upper <- fmt_num(.upper, digits, width)
    paste0(.est, " (", .lower, ",", .upper, ")")
  }
  
  #' Format p-Value
  #'
  #' @param .p a p-value.
  #' @param digits number of digits for `.est`, `.lower`, and `.upper`.
  #'
  #' @examples
  #' fmt_pval(0.2)
  #' @export
  fmt_pval <- function(.p, digits = 3) {
    scale <- 10^(-1 * digits)
    p_scale <- paste0("<", digits)
    ifelse(.p < scale, p_scale, fmt_num(.p, digits = digits))
  }

Package: pilot1wrappers
File: R/helpers.R
Format: text
Content:
  #' Add a padding row below data
  #'
  #' @param .data Data to pad
  #' @param n Number of rows to pad
  #' 
  #' @importFrom stringr str_pad
  #'
  #' @return Dataframe with extra blank rows
  #' @export
  pad_row <- function(.data, n=1) {
    .data[(nrow(.data)+1):(nrow(.data)+n), ] <- ""
    .data
  }
  
  #' Number formatter
  #'
  #' Format numbers for presentation, with proper rounding of data
  #' 
  #' @param var Variable to format
  #' @param digits Desired number of decimal places
  #' @param size String size
  #' @param int_len Space allotted for integer side of the decimal
  #'
  #' @return Formatted string
  #' @export 
  num_fmt <- Vectorize(function(var, digits=0, size=10, int_len=3) {
    # Formats summary stat strings to align display correctly
    
    if (is.na(var)) return('')
    
    # Set nsmall to input digits
    nsmall = digits
    
    # Incremement digits for to compensate for display
    if (digits > 0) {
      digits = digits + 1
    }
    
    # Form the string
    return(str_pad(
      format(
        # Round
        round(var, nsmall),
        # Set width of format string
        width=(int_len+digits),
        # Decimals to display
        nsmall=nsmall
      ),
      # Overall width padding
      side='right', size
    ))
  })

Package: pilot1wrappers
File: R/package.R
Format: text
Content:
  #' @keywords internal
  "_PACKAGE"
  
  # The following block is used by usethis to automatically manage
  # roxygen namespace tags. Modify with care!
  ## usethis namespace: start
  ## usethis namespace: end
  NULL

Package: pilot1wrappers
File: R/Tplyr_helpers.R
Format: text
Content:
  #' Nest Row Labels in a Tplyr table
  #' 
  #' This is a (high ungeneralized) helper function. Current function assumes that 
  #' row_label1 groups row_label2, and turns row_label1 into a stub over its 
  #' related groups of row_label2.
  #'
  #' @param .dat Input data set - should come from a built Tplyr table. 
  #'
  #' @importFrom dplyr distinct rename bind_rows mutate select arrange across
  #' @importFrom dplyr starts_with
  #' @importFrom tidyr replace_na
  #' 
  #' @return data.frame with row labels nested
  #' @export 
  nest_rowlabels <- function(.dat) {
    stubs <- .dat %>% 
      distinct(row_label1, ord_layer_index) %>% 
      rename(row_label = row_label1) %>% 
      mutate(
        ord_layer_1 = 0, 
        ord_layer_2 = 0
      )
    
    .dat %>% 
      select(-row_label1, row_label=row_label2) %>% 
      bind_rows(stubs) %>% 
      arrange(ord_layer_index, ord_layer_1, ord_layer_2) %>% 
      mutate(
        across(starts_with('var'), ~ tidyr::replace_na(., ''))
      )
  }

Package: pilot1wrappers
File: man/efficacy_models.Rd
Format: text
Content:
  % Generated by roxygen2: do not edit by hand
  % Please edit documentation in R/eff_models.R
  \name{efficacy_models}
  \alias{efficacy_models}
  \title{ANCOVA Model data processing necessary for Table 14-3.01}
  \usage{
  efficacy_models(data, var = NULL, wk = NULL)
  }
  \arguments{
  \item{data}{Source dataset (filtered by flags)}
  
  \item{var}{Variable on which model should be run}
  
  \item{wk}{Visit to be modeled}
  }
  \value{
  Formatted dataframe
  }
  \description{
  This function handles the necessary data processing to handle the CDISC pilot
  primary endpoint analysis. The original source can be found
  \href{https://github.com/atorus-research/CDISC_pilot_replication/blob/3c8e9e3798c02be8d93bd8e8944d1e0d3f6519e2/programs/funcs.R#L401}{here}
  }

Package: pilot1wrappers
File: man/fmt_ci.Rd
Format: text
Content:
  % Generated by roxygen2: do not edit by hand
  % Please edit documentation in R/fmt.R
  \name{fmt_ci}
  \alias{fmt_ci}
  \title{Format confidence interval}
  \usage{
  fmt_ci(.est, .lower, .upper, digits = 2, width = digits + 3)
  }
  \arguments{
  \item{.est}{an estimator.}
  
  \item{.lower}{lower confidence interval bound of an estimator.}
  
  \item{.upper}{upper confidence interval bound of an estimator.}
  
  \item{digits}{number of digits for \code{.est}, \code{.lower}, and \code{.upper}.}
  
  \item{width}{the total field width.}
  }
  \description{
  Format confidence interval
  }
  \examples{
  fmt_ci(1, -0.25, 1.32)
  }

Package: pilot1wrappers
File: man/fmt_est.Rd
Format: text
Content:
  % Generated by roxygen2: do not edit by hand
  % Please edit documentation in R/fmt.R
  \name{fmt_est}
  \alias{fmt_est}
  \title{Format point estimator}
  \usage{
  fmt_est(.mean, .sd, digits = c(1, 2))
  }
  \arguments{
  \item{.mean}{mean of an estimator.}
  
  \item{.sd}{sd of an estimator.}
  
  \item{digits}{number of digits for \code{.mean} and \code{.sd}.}
  }
  \description{
  Format point estimator
  }
  \examples{
  fmt_est(1.25, 0.5)
  }

Package: pilot1wrappers
File: man/fmt_num.Rd
Format: text
Content:
  % Generated by roxygen2: do not edit by hand
  % Please edit documentation in R/fmt.R
  \name{fmt_num}
  \alias{fmt_num}
  \title{Format numeric value}
  \usage{
  fmt_num(x, digits, width = digits + 4)
  }
  \arguments{
  \item{x}{an atomic numerical or character object, possibly
      \code{\link[base]{complex}} only for \code{prettyNum()}, typically a
      vector of real numbers.  Any class is discarded, with a warning.}
  
  \item{digits}{the desired number of digits after the decimal
      point (\code{format = "f"}) or \emph{significant} digits
      (\code{format = "g"}, \code{= "e"} or \code{= "fg"}).
  
      Default: 2 for integer, 4 for real numbers.  If less than 0,
      the C default of 6 digits is used.  If specified as more than 50, 50
      will be used with a warning unless \code{format = "f"} where it is
      limited to typically 324. (Not more than 15--21 digits need be
      accurate, depending on the OS and compiler used.  This limit is
      just a precaution against segfaults in the underlying C runtime.)
    }
  
  \item{width}{the total field width; if both \code{digits} and
      \code{width} are unspecified, \code{width} defaults to 1,
      otherwise to \code{digits + 1}.  \code{width = 0} will use
      \code{width = digits}, \code{width < 0} means left
      justify the number in this field (equivalent to \code{flag = "-"}).
      If necessary, the result will have more characters than
      \code{width}.  For character data this is interpreted in characters
      (not bytes nor display width).
    }
  }
  \description{
  Format numeric value
  }
  \examples{
  fmt_num(1.25, digits = 1)
  }

Package: pilot1wrappers
File: man/fmt_pval.Rd
Format: text
Content:
  % Generated by roxygen2: do not edit by hand
  % Please edit documentation in R/fmt.R
  \name{fmt_pval}
  \alias{fmt_pval}
  \title{Format p-Value}
  \usage{
  fmt_pval(.p, digits = 3)
  }
  \arguments{
  \item{.p}{a p-value.}
  
  \item{digits}{number of digits for \code{.est}, \code{.lower}, and \code{.upper}.}
  }
  \description{
  Format p-Value
  }
  \examples{
  fmt_pval(0.2)
  }

Package: pilot1wrappers
File: man/nest_rowlabels.Rd
Format: text
Content:
  % Generated by roxygen2: do not edit by hand
  % Please edit documentation in R/Tplyr_helpers.R
  \name{nest_rowlabels}
  \alias{nest_rowlabels}
  \title{Nest Row Labels in a Tplyr table}
  \usage{
  nest_rowlabels(.dat)
  }
  \arguments{
  \item{.dat}{Input data set - should come from a built Tplyr table.}
  }
  \value{
  data.frame with row labels nested
  }
  \description{
  This is a (high ungeneralized) helper function. Current function assumes that
  row_label1 groups row_label2, and turns row_label1 into a stub over its
  related groups of row_label2.
  }

Package: pilot1wrappers
File: man/num_fmt.Rd
Format: text
Content:
  % Generated by roxygen2: do not edit by hand
  % Please edit documentation in R/helpers.R
  \name{num_fmt}
  \alias{num_fmt}
  \title{Number formatter}
  \usage{
  num_fmt(var, digits = 0, size = 10, int_len = 3)
  }
  \arguments{
  \item{var}{Variable to format}
  
  \item{digits}{Desired number of decimal places}
  
  \item{size}{String size}
  
  \item{int_len}{Space allotted for integer side of the decimal}
  }
  \value{
  Formatted string
  }
  \description{
  Format numbers for presentation, with proper rounding of data
  }

Package: pilot1wrappers
File: man/pad_row.Rd
Format: text
Content:
  % Generated by roxygen2: do not edit by hand
  % Please edit documentation in R/helpers.R
  \name{pad_row}
  \alias{pad_row}
  \title{Add a padding row below data}
  \usage{
  pad_row(.data, n = 1)
  }
  \arguments{
  \item{.data}{Data to pad}
  
  \item{n}{Number of rows to pad}
  }
  \value{
  Dataframe with extra blank rows
  }
  \description{
  Add a padding row below data
  }

Package: pilot1wrappers
File: man/pilot1wrappers-package.Rd
Format: text
Content:
  % Generated by roxygen2: do not edit by hand
  % Please edit documentation in R/package.R
  \docType{package}
  \name{pilot1wrappers-package}
  \alias{pilot1wrappers}
  \alias{pilot1wrappers-package}
  \title{pilot1wrappers: R Consortium R Submission Pilot 1}
  \description{
  R Consortium R Submission Pilot 1.
  }
  \author{
  \strong{Maintainer}: Yilong Zhang \email{elong0527@gmail.com}
  
  Authors:
  \itemize{
    \item Ning Leng
    \item Mike Stackhouse
    \item Peikun Wu
    \item Heng Wang
    \item Eli Miller
  }
  
  Other contributors:
  \itemize{
    \item Steven Haesendonckx [contributor]
  }
  
  }
  \keyword{internal}

Package: pilot1wrappers
File: inst/pkgdown/assets/readme.txt
Format: text
Content:
  do not delete. Paceholder for pkgdown

Package: pilot1wrappers
File: inst/pkgdown/templates/readme.txt
Format: text
Content:
  do not delete. Paceholder for pkgdown

Package: pilot1wrappers
File: inst/startup.R
Format: text
Content:
  # Project Level Setup 
  R_version <- "4.1.2"																                  # set up project R version
  snapshot  <- "2021-08-31" 									                          # set up snapshot date
  repos     <- paste0("https://mran.microsoft.com/snapshot/", snapshot)  # set up repository based on snapshot
  
  home      <- normalizePath(".") # set up home directory
  while(! "DESCRIPTION" %in% list.files(home)){
          home <- dirname(home)
  }
  
  # A&R folder path (Do not edit information below)
  path <- list(
   home      = "",                   # Project home
   adam      = "adam",                 # ADaM data
   output    = "output"                # Output
  
  
  )
  
  path <- lapply(path, function(x) file.path(home, x))
  
  # Define repo URL for project specific package installation
  options(repos = repos)
  
  # Check R Version
  if(paste(R.version$major, R.version$minor, sep = ".") != R_version & interactive()){
   stop("The current R version is not the same with the current project in ", R_version)
  }
  
  # Repository
  message("Current project R package repository:")
  message(paste0("    ", getOption("repos")))
  message(" ")
  
  # Display R Session Status
  #message("R packages were installed from repo: ", options('repo'), "\n")
  message("Below R package path are searching in order to find installed R pacakges in this R session:", "\n",
          paste(paste0("    ", .libPaths()), collapse = "\n"))
  message("\n")
  
  message("The project home directory is ", home)
  message("\n")
  
  rm(home, R_version)

